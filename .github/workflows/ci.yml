name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm run test:run
    
    - name: Run test coverage
      run: npm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
    
    - name: Build application
      run: npm run build
      
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Security audit
      run: npm audit --audit-level moderate
      
  performance-check:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
    
    - name: Analyze bundle size
      run: npx vite-bundle-analyzer dist --analyze
    
    - name: Performance budget check
      run: |
        BUNDLE_SIZE=$(du -sk dist | cut -f1)
        if [ $BUNDLE_SIZE -gt 2048 ]; then
          echo "Bundle size $BUNDLE_SIZE KB exceeds 2MB limit"
          exit 1
        fi
        echo "Bundle size: $BUNDLE_SIZE KB (within 2MB limit)"